/* Author: Blake Coleman

This program allows users to highlight the page share the url with 
highlightURIs added to the end of the url.

i.e. "www.wikipedia.com/tigers#startIdices=1,2,3,4#endIndices=1,2,3,5"

start of highlight: DOM index firstDocumentElement[2][3][4]
end of highlight: DOM index firstDocumentElement[2][3][5]

The last numbers 4 and 5 represent the index of the innerHTML property
of the indexed element firstDocumentElement[2][3] and 
firstDocumentElement[2][3][5]

This is a relatively accurate way to quickly share strictly necessary
information to a recipient.

The Highlight.js document and any documents inspired by
Highlight.js arte free to use strictly as a means to have
specific information identified on a site by a site's user group. 
The highlight.js document and any inspired documents thereafter cannot 
be used for any type of tracking of user data generated by by the highlight.js
functionality and that of any of its children's functionalities.
Tracking of user data shall only be allowed under the circumstance 
of contractual user consent. Unauthorized use of Highlight.js can
result in serious consequences assessed by law.
*/
//necessary anchor and offset

var Highlight = Class.create( Highlight, {
	initialize: function(start, end) {
		alert('0');
		this.getHighlight(start,end);
		return this;
	},
	
	getHighlight: function(start,end) {
		this.startSection = this.getStartSection(start);
		this.startIndex = this.getSectionStartIndex(this.startSection);
	
		this.endSection = this.getEndSection(end);
		this.endIndex = this.getSectionEndIndex(this.endSection);
	
		this.startURI = this.getStartURI(this.startSection);
		this.endURI = this.getEndURI(this.endSection);
	},
	
	//Highlight start element DOM sequential indices array
	getStartSection: function(start) {
		return start;
	},
	
	//effectively Index of character inside start element
	//i.e. index of 0 would return the first character inside element.innerHTML()
	getSectionStartIndex: function(start) {
		return start;
	},
	
	//Highlight End Element DOM sequential indices array
	getEndSection: function(end) {
		return end;
	},
	
	//effectively Index of character inside end element
	//i.e. index of 5 would return the sixth character inside element.innerHTML()
	getSectionEndIndex: function(end) {
		return end;
	},

	//URL suffix start string
	getStartURI: function(indices) {
		var startSection = indices.split('&')[0];
		return startSection;
	},
	
	//URL suffix end string
	getEndURI: function(indices) {
		var startSection = indices.split('&')[1];
		return endSection;
	},
	
	//start and end indices to string for HighlighterScanner
	//to append to window url
	toString: function(startIndices, endIndices) {
		var indicesString = '';
		for (var i = 0; i < startIndices.length; i++) {
			if (i == startIndices.length - 1) {
				indicesString += startIndices[i];
			} else {
				indicesString += startIndices[i];
			}
		}
		//separate start and end indices
		indecesString += '-';
		//repeat first for loop for endIndices
		for (var i = 0; i < endIndices.length; i++) {
			indicesString += endIndices[i];
		}
		return indicesString;
	}
});

var HighlightScanner = Class.create( HighlightScanner, {
	
	initialize: function() {
		alert('0');
		this.highlightCount = 0;
		alert('1');
		this.observe();
		alert('2');
	},
	
	observe: function(observe) {
		document.observe("click", function() {
			alert('clicked');
			this.getHighlight();
		});
	},
	
	//Create new highlight object and count number of highlights
	getHighlight: function() {
		var selection = window.getSelection();
		if (window.document.selection.toString() != '') {
			this.highlight = new Highlight(startSelection, endSelection);
			this.appendHighlightIndices(this.highlight, this.highlightCount);
			this.highlightCount++;
		}
	},
	
	//append URI strings to window url
	appendHighlightIndices: function(highlight,count) {
		if(count == 0) {
			window.location += "&highlight"+count+"="+highlight.toString();
		} else {
			window.location += "#highlight"+count+"="+highlight.toString();
		}
	}
});


//Test:
//var highlight = new Highlight();
var highlightScanner = new HighlightScanner();
//var highlighter = new Highlighter();





